/* Terminal Theme CSS */

@import url('https://fonts.googleapis.com/css2?family=VT323&family=Share+Tech+Mono&display=swap');

/* CSS Variables */
:root {
  --terminal-green: #00ff00;
  --terminal-amber: #ffb000;
  --terminal-red: #ff0040;
  --terminal-blue: #00a8ff;
  --terminal-bg: #0a0a0a;
  --terminal-bg-light: #1a1a1a;
  --crt-green: rgba(0, 255, 0, 0.1);
  --scanline-opacity: 0.05;
}

/* Global Terminal Styles */
* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background: var(--terminal-bg);
  color: var(--terminal-green);
  font-family: 'Share Tech Mono', monospace;
  overflow-x: hidden;
}

/* Enhanced CRT Effect Container */
.crt-container {
  position: relative;
  min-height: 100vh;
  background: radial-gradient(ellipse at center, var(--terminal-bg) 0%, #000 100%);
  overflow: hidden;
}

/* CRT Screen Curvature */
.crt-container::after {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  border-radius: 15px;
  box-shadow: 
    inset 0 0 0 3px rgba(0, 255, 0, 0.1),
    inset 0 0 20px rgba(0, 255, 0, 0.05),
    inset 0 0 60px rgba(0, 0, 0, 0.8);
  pointer-events: none;
  z-index: 10;
}

/* Phosphor Glow Effect */
.crt-container {
  filter: 
    drop-shadow(0 0 5px rgba(0, 255, 0, 0.4))
    drop-shadow(0 0 20px rgba(0, 255, 0, 0.2))
    drop-shadow(0 0 40px rgba(0, 255, 0, 0.1));
}

/* Chromatic Aberration for Text */
.crt-container .terminal-window {
  position: relative;
}

.crt-container .terminal-window::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    radial-gradient(ellipse at center, transparent 60%, rgba(255, 0, 0, 0.02) 80%, rgba(0, 0, 255, 0.02) 100%);
  pointer-events: none;
  z-index: 1;
}

/* Screen Distortion - DISABLED for stable UI */
/*
@keyframes screen-distortion {
  0%, 100% { 
    transform: translateX(0) scaleX(1);
  }
  16% { 
    transform: translateX(-2px) scaleX(1.01);
  }
  33% { 
    transform: translateX(1px) scaleX(0.99);
  }
  50% { 
    transform: translateX(-1px) scaleX(1.005);
  }
  66% { 
    transform: translateX(2px) scaleX(0.995);
  }
  83% { 
    transform: translateX(-1px) scaleX(1.002);
  }
}
*/

.crt-distortion {
  /* animation: screen-distortion 10s ease-in-out infinite; */
}

/* Enhanced Dynamic Scanlines */
.crt-container::before {
  content: '';
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(
      transparent 50%,
      rgba(0, 0, 0, 0.03) 50%,
      rgba(0, 0, 0, 0.05) 51%,
      transparent 52%
    ),
    linear-gradient(
      90deg,
      transparent 50%,
      rgba(0, 255, 0, 0.01) 50%,
      transparent 51%
    );
  background-size: 100% 4px, 6px 100%;
  z-index: 2;
  pointer-events: none;
  opacity: var(--scanline-opacity);
  /* animation: scanlines-move 0.1s linear infinite; */
}

/* Scanlines movement - DISABLED for stable UI */
/*
@keyframes scanlines-move {
  0% { 
    background-position: 0 0, 0 0;
  }
  100% { 
    background-position: 0 4px, 6px 0;
  }
}
*/

/* Horizontal Scan Line */
.crt-container {
  position: relative;
}

.crt-container::before {
  /* animation: 
    scanlines-move 0.1s linear infinite,
    scanline-flicker 0.15s ease-in-out infinite alternate; */
}

/* Scanline flicker - DISABLED for stable UI */
/*
@keyframes scanline-flicker {
  0% { opacity: 0.05; }
  100% { opacity: 0.08; }
}
*/

/* Enhanced Screen Flicker Animation - DISABLED for stable UI */
/*
@keyframes flicker {
  0% { 
    opacity: 0.97;
    filter: brightness(1);
  }
  5% { 
    opacity: 0.94;
    filter: brightness(0.95) contrast(1.05);
  }
  10% { 
    opacity: 0.98;
    filter: brightness(1.02);
  }
  15% { 
    opacity: 0.91;
    filter: brightness(0.9) contrast(1.1);
  }
  20% { 
    opacity: 0.96;
    filter: brightness(1);
  }
  25% { 
    opacity: 0.94;
    filter: brightness(0.97) contrast(1.03);
  }
  30% { 
    opacity: 0.99;
    filter: brightness(1.01);
  }
  35% { 
    opacity: 0.92;
    filter: brightness(0.93) contrast(1.08);
  }
  40% { 
    opacity: 0.97;
    filter: brightness(1);
  }
  45% { 
    opacity: 0.95;
    filter: brightness(0.98);
  }
  50% { 
    opacity: 0.93;
    filter: brightness(0.95) contrast(1.05);
  }
  60% { 
    opacity: 0.99;
    filter: brightness(1.02);
  }
  70% { 
    opacity: 0.95;
    filter: brightness(0.97);
  }
  80% { 
    opacity: 0.97;
    filter: brightness(1);
  }
  90% { 
    opacity: 0.94;
    filter: brightness(0.96) contrast(1.04);
  }
  100% { 
    opacity: 0.98;
    filter: brightness(1);
  }
}
*/

.crt-flicker {
  /* animation: flicker 0.15s infinite; */
}

/* Screen Burn-in Effects */
.crt-burnin {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 1;
  background: 
    radial-gradient(ellipse at 25% 25%, rgba(0, 255, 0, 0.005) 0%, transparent 50%),
    radial-gradient(ellipse at 75% 75%, rgba(0, 255, 0, 0.003) 0%, transparent 50%),
    linear-gradient(90deg, transparent 0%, rgba(0, 255, 0, 0.002) 50%, transparent 100%);
  opacity: 0.3;
}

/* Ambient Monitor Glow */
.crt-container {
  position: relative;
  box-shadow: 
    0 0 50px rgba(0, 255, 0, 0.1),
    0 0 100px rgba(0, 255, 0, 0.05),
    0 0 200px rgba(0, 255, 0, 0.02);
}

/* Terminal Window */
.terminal-window {
  position: relative;
  background: var(--terminal-bg-light);
  border: 2px solid var(--terminal-green);
  border-radius: 8px;
  padding: 20px;
  margin: 20px auto;
  max-width: 1200px;
  box-shadow: 
    0 0 20px var(--crt-green),
    inset 0 0 20px rgba(0, 255, 0, 0.05);
}

/* Terminal Header */
.terminal-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-bottom: 15px;
  border-bottom: 1px solid var(--terminal-green);
  margin-bottom: 20px;
}

.terminal-title {
  font-size: 14px;
  text-transform: uppercase;
  letter-spacing: 2px;
}

.terminal-status {
  display: flex;
  gap: 15px;
  font-size: 12px;
  opacity: 0.8;
}

/* Blinking Cursor */
@keyframes blink {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}

.cursor {
  display: inline-block;
  width: 10px;
  height: 20px;
  background: var(--terminal-green);
  animation: blink 1s infinite;
  vertical-align: text-bottom;
}

/* Text Effects */
.text-glow {
  text-shadow: 
    0 0 5px currentColor,
    0 0 10px currentColor;
}

.text-typing {
  overflow: hidden;
  white-space: nowrap;
  border-right: 3px solid var(--terminal-green);
  animation: typing 3.5s steps(40, end), blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: var(--terminal-green); }
}

/* Enhanced Buttons with Glitch Effects */
.terminal-button {
  background: transparent;
  border: 1px solid var(--terminal-green);
  color: var(--terminal-green);
  padding: 8px 16px;
  font-family: inherit;
  font-size: 14px;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.2s;
  position: relative;
  overflow: hidden;
}

.terminal-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(0, 255, 0, 0.4), transparent);
  transition: left 0.5s;
}

.terminal-button:hover::before {
  left: 100%;
}

.terminal-button:hover {
  background: var(--terminal-green);
  color: var(--terminal-bg);
  box-shadow: 
    0 0 10px var(--terminal-green),
    0 0 20px rgba(0, 255, 0, 0.3),
    inset 0 0 10px rgba(0, 0, 0, 0.2);
  animation: button-glitch 0.3s ease-in-out;
}

.terminal-button:active {
  transform: scale(0.98);
  animation: button-press-glitch 0.1s ease-in-out;
}

@keyframes button-glitch {
  0% { transform: translate(0); }
  10% { transform: translate(-1px, 0); }
  20% { transform: translate(1px, 0); }
  30% { transform: translate(0, -1px); }
  40% { transform: translate(0, 1px); }
  50% { transform: translate(-1px, -1px); }
  60% { transform: translate(1px, 1px); }
  70% { transform: translate(0); }
  100% { transform: translate(0); }
}

@keyframes button-press-glitch {
  0% { 
    transform: scale(0.98);
    filter: brightness(1.2) hue-rotate(10deg);
  }
  50% { 
    transform: scale(0.96);
    filter: brightness(0.8) hue-rotate(-10deg);
  }
  100% { 
    transform: scale(0.98);
    filter: brightness(1);
  }
}

/* Input Fields */
.terminal-input {
  background: transparent;
  border: none;
  border-bottom: 1px solid var(--terminal-green);
  color: var(--terminal-green);
  font-family: inherit;
  font-size: 16px;
  padding: 8px 0;
  width: 100%;
  outline: none;
}

.terminal-input:focus {
  border-bottom-color: var(--terminal-amber);
  box-shadow: 0 1px 0 var(--terminal-amber);
}

/* Radio Buttons as LED Indicators */
.led-radio {
  display: inline-flex;
  align-items: center;
  margin-right: 20px;
  cursor: pointer;
}

.led-radio input[type="radio"] {
  display: none;
}

.led-indicator {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: #333;
  border: 1px solid var(--terminal-green);
  margin-right: 8px;
  transition: all 0.2s;
}

.led-radio input[type="radio"]:checked + .led-indicator {
  background: var(--terminal-green);
  box-shadow: 
    0 0 10px var(--terminal-green),
    inset 0 0 5px rgba(0, 255, 0, 0.5);
}

/* Progress Bar */
.progress-bar {
  background: var(--terminal-bg);
  border: 1px solid var(--terminal-green);
  height: 20px;
  position: relative;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: var(--terminal-green);
  transition: width 0.3s ease;
  box-shadow: 0 0 10px var(--terminal-green);
}

/* ASCII Box Drawing */
.ascii-box {
  border: none;
  padding: 20px;
  background: var(--terminal-bg);
  position: relative;
}

.ascii-box::before {
  content: '┌───────────────────────────────────────┐';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
}

.ascii-box::after {
  content: '└───────────────────────────────────────┘';
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
}

/* Enhanced Glitch Effects */
@keyframes glitch-1 {
  0% {
    transform: translate(0);
    text-shadow: 
      0.05em 0 0 rgba(255, 0, 0, 0.75),
      -0.05em -0.025em 0 rgba(0, 255, 0, 0.75),
      0.025em 0.05em 0 rgba(0, 0, 255, 0.75);
  }
  2% {
    transform: translate(2px, 0);
    text-shadow: 
      0.07em 0 0 rgba(255, 0, 0, 0.8),
      -0.07em -0.025em 0 rgba(0, 255, 0, 0.8),
      0.025em 0.07em 0 rgba(0, 0, 255, 0.8);
  }
  4% {
    transform: translate(-2px, 0);
    text-shadow: 
      -0.05em -0.025em 0 rgba(255, 0, 0, 0.75),
      0.025em 0.025em 0 rgba(0, 255, 0, 0.75),
      -0.05em -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  6% {
    transform: translate(0, -1px);
    text-shadow: 
      0.025em 0.05em 0 rgba(255, 0, 0, 0.75),
      0.05em 0 0 rgba(0, 255, 0, 0.75),
      0 -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  8% {
    transform: translate(0, 1px);
    text-shadow: 
      -0.025em 0 0 rgba(255, 0, 0, 0.75),
      -0.025em -0.025em 0 rgba(0, 255, 0, 0.75),
      -0.025em -0.05em 0 rgba(0, 0, 255, 0.75);
  }
  10% {
    transform: translate(0);
    text-shadow: none;
  }
  100% {
    transform: translate(0);
    text-shadow: none;
  }
}

@keyframes glitch-2 {
  0%, 100% {
    text-shadow: 
      0 0 5px var(--terminal-green),
      0 0 10px var(--terminal-green);
  }
  10% {
    text-shadow: 
      -2px 0 red,
      2px 0 blue,
      0 0 5px var(--terminal-green);
  }
  20% {
    text-shadow: 
      2px 0 red,
      -2px 0 blue,
      0 0 10px var(--terminal-green);
  }
  30% {
    text-shadow: 
      0 -2px red,
      0 2px blue,
      0 0 5px var(--terminal-green);
  }
  40% {
    text-shadow: 
      -1px -1px red,
      1px 1px blue,
      0 0 8px var(--terminal-green);
  }
  50% {
    text-shadow: 
      1px -1px red,
      -1px 1px blue,
      0 0 12px var(--terminal-green);
  }
}

@keyframes glitch-skew {
  0% {
    transform: skew(0deg);
  }
  10% {
    transform: skew(2deg);
  }
  20% {
    transform: skew(-1deg);
  }
  30% {
    transform: skew(1deg);
  }
  40% {
    transform: skew(-0.5deg);
  }
  50% {
    transform: skew(0.5deg);
  }
  60% {
    transform: skew(0deg);
  }
  100% {
    transform: skew(0deg);
  }
}

/* Glitch Classes */
.glitch {
  animation: glitch-1 0.3s infinite;
}

.glitch-hover:hover {
  animation: 
    glitch-1 0.3s infinite,
    glitch-2 0.2s infinite alternate,
    glitch-skew 0.1s infinite alternate;
  cursor: pointer;
}

.glitch-text {
  position: relative;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  opacity: 0;
}

.glitch-text:hover::before {
  animation: glitch-text-1 0.3s infinite;
  color: rgba(255, 0, 0, 0.8);
  z-index: -1;
}

.glitch-text:hover::after {
  animation: glitch-text-2 0.3s infinite;
  color: rgba(0, 0, 255, 0.8);
  z-index: -2;
}

@keyframes glitch-text-1 {
  0% {
    transform: translate(0);
    opacity: 0;
  }
  1% {
    transform: translate(-2px, -1px);
    opacity: 1;
  }
  2% {
    transform: translate(2px, 1px);
    opacity: 1;
  }
  3% {
    transform: translate(0);
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

@keyframes glitch-text-2 {
  0% {
    transform: translate(0);
    opacity: 0;
  }
  1.5% {
    transform: translate(2px, -1px);
    opacity: 1;
  }
  2.5% {
    transform: translate(-2px, 1px);
    opacity: 1;
  }
  3.5% {
    transform: translate(0);
    opacity: 0;
  }
  100% {
    opacity: 0;
  }
}

/* Alert Colors */
.alert-green { color: var(--terminal-green); }
.alert-amber { color: var(--terminal-amber); }
.alert-red { color: var(--terminal-red); }

/* Enhanced Agent State Animations with Particle Systems */
@keyframes thinking-pulse {
  0%, 100% { opacity: 0.4; }
  50% { opacity: 1; }
}

@keyframes writing-glow {
  0%, 100% { 
    box-shadow: 0 0 20px var(--terminal-green);
    border-color: var(--terminal-green);
  }
  50% { 
    box-shadow: 0 0 30px var(--terminal-green), inset 0 0 15px rgba(0, 255, 0, 0.2);
    border-color: var(--terminal-amber);
  }
}

/* Particle System Base */
.agent-box {
  position: relative;
  overflow: visible;
}

.agent-box::before,
.agent-box::after {
  content: '';
  position: absolute;
  width: 4px;
  height: 4px;
  background: var(--terminal-green);
  border-radius: 50%;
  opacity: 0;
  pointer-events: none;
}

/* Thinking State with Floating Particles */
.agent-box.thinking {
  animation: thinking-pulse 2s ease-in-out infinite;
}

.agent-box.thinking::before {
  top: 10%;
  left: -10px;
  animation: 
    thinking-particle-1 3s ease-in-out infinite,
    particle-float-1 4s ease-in-out infinite;
  opacity: 0.6;
  box-shadow: 0 0 6px var(--terminal-green);
}

.agent-box.thinking::after {
  top: 70%;
  right: -15px;
  animation: 
    thinking-particle-2 2.5s ease-in-out infinite,
    particle-float-2 3.5s ease-in-out infinite;
  opacity: 0.7;
  box-shadow: 0 0 6px var(--terminal-green);
}

@keyframes thinking-particle-1 {
  0%, 100% { 
    transform: translateY(0) scale(0.5);
    opacity: 0;
  }
  50% { 
    transform: translateY(-20px) scale(1);
    opacity: 0.8;
  }
}

@keyframes thinking-particle-2 {
  0%, 100% { 
    transform: translateY(0) scale(0.3);
    opacity: 0;
  }
  60% { 
    transform: translateY(-25px) scale(0.8);
    opacity: 0.6;
  }
}

@keyframes particle-float-1 {
  0%, 100% { transform: translateX(0); }
  25% { transform: translateX(5px); }
  75% { transform: translateX(-3px); }
}

@keyframes particle-float-2 {
  0%, 100% { transform: translateX(0); }
  30% { transform: translateX(-4px); }
  70% { transform: translateX(6px); }
}

/* Writing State with Energy Particles */
.agent-box.writing {
  animation: writing-glow 0.8s ease-in-out infinite;
  background: rgba(0, 255, 0, 0.05);
}

.agent-box.writing::before {
  top: 50%;
  left: -8px;
  animation: 
    writing-spark-1 0.5s ease-in-out infinite,
    spark-drift-1 2s ease-in-out infinite;
  opacity: 0.9;
  background: var(--terminal-amber);
  box-shadow: 0 0 10px var(--terminal-amber);
}

.agent-box.writing::after {
  top: 30%;
  right: -12px;
  animation: 
    writing-spark-2 0.7s ease-in-out infinite,
    spark-drift-2 1.8s ease-in-out infinite;
  opacity: 0.8;
  background: var(--terminal-amber);
  box-shadow: 0 0 8px var(--terminal-amber);
}

@keyframes writing-spark-1 {
  0%, 100% { 
    transform: scale(0.2);
    opacity: 0;
  }
  50% { 
    transform: scale(1.2);
    opacity: 1;
  }
}

@keyframes writing-spark-2 {
  0%, 100% { 
    transform: scale(0.1);
    opacity: 0;
  }
  40% { 
    transform: scale(1);
    opacity: 0.9;
  }
}

@keyframes spark-drift-1 {
  0%, 100% { transform: translate(0, 0) rotate(0deg); }
  25% { transform: translate(3px, -2px) rotate(90deg); }
  50% { transform: translate(-2px, -4px) rotate(180deg); }
  75% { transform: translate(-3px, 2px) rotate(270deg); }
}

@keyframes spark-drift-2 {
  0%, 100% { transform: translate(0, 0) rotate(0deg); }
  33% { transform: translate(-2px, -3px) rotate(120deg); }
  66% { transform: translate(4px, -1px) rotate(240deg); }
}

/* Multi-layered Particle Effects */
.agent-box.thinking,
.agent-box.writing {
  position: relative;
}

/* Additional Particle Layer */
.particle-system {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  pointer-events: none;
  overflow: visible;
}

.particle {
  position: absolute;
  width: 2px;
  height: 2px;
  background: var(--terminal-green);
  border-radius: 50%;
  opacity: 0.4;
}

.particle-1 {
  top: 20%;
  left: 90%;
  animation: particle-orbit-1 5s linear infinite;
}

.particle-2 {
  top: 80%;
  left: 10%;
  animation: particle-orbit-2 4s linear infinite;
}

.particle-3 {
  top: 50%;
  left: 105%;
  animation: particle-orbit-3 6s linear infinite;
}

@keyframes particle-orbit-1 {
  0% { transform: rotate(0deg) translateX(20px) rotate(0deg); }
  100% { transform: rotate(360deg) translateX(20px) rotate(-360deg); }
}

@keyframes particle-orbit-2 {
  0% { transform: rotate(0deg) translateX(-25px) rotate(0deg); }
  100% { transform: rotate(-360deg) translateX(-25px) rotate(360deg); }
}

@keyframes particle-orbit-3 {
  0% { transform: rotate(0deg) translateX(15px) rotate(0deg); }
  100% { transform: rotate(360deg) translateX(15px) rotate(-360deg); }
}

.agent-box.waiting {
  opacity: 0.3;
}

/* Animated dots for loading states */
@keyframes dots-wave {
  0%, 60%, 100% { transform: translateY(0); }
  30% { transform: translateY(-10px); }
}

.dots span {
  display: inline-block;
  animation: dots-wave 1.4s ease-in-out infinite;
}

.dots span:nth-child(1) { animation-delay: 0s; }
.dots span:nth-child(2) { animation-delay: 0.1s; }
.dots span:nth-child(3) { animation-delay: 0.2s; }

/* Cursor blink for writing state */
.cursor-blink {
  animation: blink 0.5s infinite;
}

/* Activity Feed Styles */
.activity-feed {
  background: var(--terminal-bg);
  border: 1px solid var(--terminal-green);
  padding: 15px;
  max-height: 200px;
  overflow-y: auto;
  font-size: 13px;
  line-height: 1.8;
}

.activity-entry {
  margin-bottom: 8px;
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  to { opacity: 1; }
}

.activity-timestamp {
  color: var(--terminal-amber);
  font-size: 11px;
  margin-right: 10px;
}

.activity-icon {
  margin-right: 8px;
}

/* Milestone Tracker Styles */
.milestone-tracker {
  display: flex;
  align-items: center;
  gap: 10px;
  margin: 20px 0;
}

.milestone-item {
  flex: 1;
  text-align: center;
  position: relative;
}

.milestone-dot {
  width: 20px;
  height: 20px;
  border-radius: 50%;
  border: 2px solid var(--terminal-green);
  background: var(--terminal-bg);
  margin: 0 auto 8px;
  position: relative;
  z-index: 2;
}

.milestone-dot.completed {
  background: var(--terminal-green);
  box-shadow: 0 0 15px var(--terminal-green);
}

.milestone-dot.active {
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% { box-shadow: 0 0 0 0 var(--terminal-green); }
  70% { box-shadow: 0 0 0 10px transparent; }
  100% { box-shadow: 0 0 0 0 transparent; }
}

.milestone-line {
  position: absolute;
  top: 10px;
  left: 50%;
  right: -50%;
  height: 2px;
  background: var(--terminal-green);
  opacity: 0.3;
  z-index: 1;
}

.milestone-line.completed {
  opacity: 1;
  background: var(--terminal-green);
}

.milestone-item:last-child .milestone-line {
  display: none;
}

.milestone-label {
  font-size: 11px;
  opacity: 0.7;
}

/* Message Tabs Styles */
.message-tabs-container {
  margin: 20px 0;
}

.tab-header {
  display: flex;
  gap: 0;
  border-bottom: 1px solid var(--terminal-green);
}

.tab-button {
  background: transparent;
  border: 1px solid var(--terminal-green);
  border-bottom: none;
  color: var(--terminal-green);
  padding: 8px 20px;
  font-family: inherit;
  font-size: 13px;
  cursor: pointer;
  opacity: 0.6;
  transition: all 0.2s;
  position: relative;
  top: 1px;
}

.tab-button:first-child {
  border-right: none;
}

.tab-button.active {
  opacity: 1;
  background: var(--terminal-bg);
  border-bottom: 1px solid var(--terminal-bg);
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.3);
}

.tab-button:hover:not(.active) {
  opacity: 0.8;
}

/* Full Log Styles */
.full-log-container {
  margin-top: -1px;
}

.full-log-content {
  background: var(--terminal-bg);
  border: 1px solid var(--terminal-green);
  border-top: none;
  padding: 20px;
  max-height: 400px;
  overflow-y: auto;
  font-size: 13px;
}

.full-log-entry {
  margin-bottom: 20px;
  animation: fadeIn 0.3s forwards;
}

.log-header {
  display: flex;
  gap: 15px;
  margin-bottom: 10px;
  align-items: center;
}

.log-agent {
  color: var(--terminal-amber);
  font-weight: bold;
  font-size: 14px;
}

.log-turn {
  color: var(--terminal-blue);
  font-size: 12px;
  opacity: 0.8;
}

.log-phase {
  color: var(--terminal-green);
  font-size: 12px;
  opacity: 0.8;
  text-transform: uppercase;
}

.log-message {
  margin-left: 20px;
  line-height: 1.6;
}

.log-message pre {
  white-space: pre-wrap;
  word-wrap: break-word;
  margin: 0;
  font-family: inherit;
  color: rgba(0, 255, 0, 0.9);
}

.log-divider {
  color: var(--terminal-green);
  opacity: 0.3;
  margin-top: 15px;
  font-size: 10px;
  overflow: hidden;
}

/* Matrix Rain Effect for Story Generation */
.matrix-rain {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
  overflow: hidden;
}

.matrix-column {
  position: absolute;
  top: -100%;
  white-space: nowrap;
  font-family: 'VT323', monospace;
  font-size: 18px;
  color: var(--terminal-green);
  opacity: 0.15;
  writing-mode: vertical-lr;
  text-orientation: mixed;
}

.matrix-column-1 {
  left: 2%;
  animation: matrix-fall-1 8s linear infinite;
  animation-delay: 0s;
}

.matrix-column-2 {
  left: 8%;
  animation: matrix-fall-2 6s linear infinite;
  animation-delay: 1s;
}

.matrix-column-3 {
  left: 15%;
  animation: matrix-fall-1 9s linear infinite;
  animation-delay: 2s;
}

.matrix-column-4 {
  left: 22%;
  animation: matrix-fall-2 7s linear infinite;
  animation-delay: 0.5s;
}

.matrix-column-5 {
  left: 30%;
  animation: matrix-fall-1 8.5s linear infinite;
  animation-delay: 3s;
}

.matrix-column-6 {
  left: 38%;
  animation: matrix-fall-2 6.5s linear infinite;
  animation-delay: 1.5s;
}

.matrix-column-7 {
  left: 45%;
  animation: matrix-fall-1 7.5s linear infinite;
  animation-delay: 2.5s;
}

.matrix-column-8 {
  left: 53%;
  animation: matrix-fall-2 8s linear infinite;
  animation-delay: 0.8s;
}

.matrix-column-9 {
  left: 61%;
  animation: matrix-fall-1 9.5s linear infinite;
  animation-delay: 3.5s;
}

.matrix-column-10 {
  left: 69%;
  animation: matrix-fall-2 7s linear infinite;
  animation-delay: 1.8s;
}

.matrix-column-11 {
  left: 77%;
  animation: matrix-fall-1 8.2s linear infinite;
  animation-delay: 2.8s;
}

.matrix-column-12 {
  left: 85%;
  animation: matrix-fall-2 6.8s linear infinite;
  animation-delay: 0.3s;
}

.matrix-column-13 {
  left: 92%;
  animation: matrix-fall-1 7.8s linear infinite;
  animation-delay: 3.2s;
}

@keyframes matrix-fall-1 {
  0% {
    transform: translateY(-100vh);
    opacity: 0;
  }
  10% {
    opacity: 0.3;
  }
  90% {
    opacity: 0.1;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

@keyframes matrix-fall-2 {
  0% {
    transform: translateY(-100vh);
    opacity: 0;
  }
  5% {
    opacity: 0.4;
  }
  15% {
    opacity: 0.2;
  }
  85% {
    opacity: 0.15;
  }
  100% {
    transform: translateY(100vh);
    opacity: 0;
  }
}

/* Matrix Rain Character Effects */
.matrix-char {
  display: inline-block;
  opacity: 0.8;
}

.matrix-char:nth-child(1) { animation: matrix-glow 2s ease-in-out infinite; }
.matrix-char:nth-child(2) { animation: matrix-glow 2.2s ease-in-out infinite; animation-delay: 0.1s; }
.matrix-char:nth-child(3) { animation: matrix-glow 1.8s ease-in-out infinite; animation-delay: 0.2s; }
.matrix-char:nth-child(4) { animation: matrix-glow 2.5s ease-in-out infinite; animation-delay: 0.15s; }
.matrix-char:nth-child(5) { animation: matrix-glow 1.9s ease-in-out infinite; animation-delay: 0.3s; }

@keyframes matrix-glow {
  0%, 100% {
    text-shadow: 0 0 5px var(--terminal-green);
    opacity: 0.6;
  }
  50% {
    text-shadow: 0 0 10px var(--terminal-green), 0 0 15px var(--terminal-green);
    opacity: 1;
  }
}

/* Data Stream Effect */
.data-stream {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: 0;
  opacity: 0.1;
}

.data-flow {
  position: absolute;
  font-family: 'VT323', monospace;
  font-size: 12px;
  color: var(--terminal-green);
  white-space: nowrap;
  opacity: 0.6;
}

.data-flow-1 {
  top: 20%;
  left: -100%;
  animation: flow-right 15s linear infinite;
  animation-delay: 2s;
}

.data-flow-2 {
  top: 40%;
  right: -100%;
  animation: flow-left 12s linear infinite;
  animation-delay: 5s;
}

.data-flow-3 {
  top: 60%;
  left: -100%;
  animation: flow-right 18s linear infinite;
  animation-delay: 8s;
}

.data-flow-4 {
  top: 80%;
  right: -100%;
  animation: flow-left 14s linear infinite;
  animation-delay: 1s;
}

@keyframes flow-right {
  0% {
    transform: translateX(-100%);
    opacity: 0;
  }
  10% {
    opacity: 0.6;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translateX(calc(100vw + 100%));
    opacity: 0;
  }
}

@keyframes flow-left {
  0% {
    transform: translateX(100%);
    opacity: 0;
  }
  10% {
    opacity: 0.6;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    transform: translateX(calc(-100vw - 100%));
    opacity: 0;
  }
}

/* Responsive */
@media (max-width: 768px) {
  .terminal-window {
    margin: 10px;
    padding: 15px;
  }
  
  .terminal-header {
    flex-direction: column;
    gap: 10px;
  }
  
  .full-log-content {
    max-height: 300px;
  }
}