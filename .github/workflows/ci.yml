name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r api/requirements.txt
    
    - name: Check code formatting
      run: |
        pip install black flake8
        # Check if code would be reformatted
        black --check agents/ utils/ api/ *.py || true
        # Run flake8 linter
        flake8 agents/ utils/ api/ *.py --max-line-length=120 --ignore=E203,W503 || true
    
    - name: Run tests
      run: |
        # Add tests when available
        python -c "print('Tests will be added in future updates')"

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linter
      working-directory: ./frontend
      run: npm run lint || true
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build

  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install safety
      run: pip install safety
    
    - name: Check for security vulnerabilities
      run: |
        pip install -r requirements.txt
        safety check || true